{"version":3,"sources":["components/PdfJSViewer.js","Home.js","components/Pdf2.js","Services.js","Sidebar.js","App.js","index.js"],"names":["PdfJSViewer","height","width","url","path","pdfPath","className","style","allowfullscreen","title","src","Home","Pdf2","url2","pdfPath2","onClick","event","document","getElementById","addEventListener","e","preventDefault","id","Services","sandbox","Sidebar","useState","sidebar","setSidebar","showSidebar","type","to","App","exact","component","startApp","ReactDOM","render","window","cordova"],"mappings":"qTAsBeA,EAnBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5BC,EAAO,sBACTC,EAAUF,EAAMC,EAAO,SAAWD,EAAMC,EAC5C,OACI,qBAAKE,UAAW,MAAQC,MAAO,CAAEL,QAAOD,UAAxC,SAEQ,wBACAO,iBAAe,EACXC,MAAOJ,EACPH,MAAM,OACND,OAAO,OACPS,IAAKL,O,MCDVM,MATf,WACI,OACI,sBAAKL,UAAU,OAAf,UACI,sCACA,cAAC,EAAD,CAAaL,OAAO,QAAQC,MAAM,aCsH/BU,EA7DD,SAAC,GAA4B,IAA1BX,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOW,EAAU,EAAVA,KAMvBT,EAAO,kBACRU,EAAWD,EAAOT,EAAO,UAAYS,EAAOT,EAkBhD,OACA,qBAAKE,UAAU,OAAf,SACI,qBAAKA,UAAU,KAAKC,MAAO,CAAEL,QAAOD,UAApC,SACS,wBAGHc,QAAU,SAACC,GAfAC,SACfC,eAAe,QAELC,iBAAiB,SAAS,SAAUC,GAC5CA,EAAEC,qBAYEC,GAAG,OACHb,MAAOK,EACHZ,MAAM,OACND,OAAO,OACPS,IAAKI,S,MClFVS,MAZf,WACI,OACI,sBAAKjB,UAAU,SAAf,UACkB,sCACA,cAAC,EAAD,CAAML,OAAO,QAAQC,MAAM,OAAOsB,SAAO,Q,qBCSlDC,MAhBjB,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAc,kBAAMD,GAAYD,IACtC,OACE,sBAAKrB,UAAWqB,EAAU,iBAAmB,UAA7C,UACE,wBAAQrB,UAAU,YAAYwB,KAAK,SAASf,QAASc,EAArD,SACE,0BAEF,qBAAId,QAASc,EAAb,UACE,6BAAI,cAAC,IAAD,CAAME,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,2B,OCQCC,MAdf,WACE,OACE,qBAAM1B,UAAU,MAAhB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,KAAK,IAAI6B,OAAK,EAACC,UAAWvB,IACjC,cAAC,IAAD,CAAOP,KAAK,YAAY8B,UAAWX,aCPvCY,G,MAAW,WACfC,IAASC,OAAO,cAAC,EAAD,IAASpB,SAASC,eAAe,WAG9CoB,OAAOC,QAGVtB,SAASE,iBAAiB,cAAegB,GAAU,GAFnDA,M","file":"static/js/main.d994e6fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Pdf.css\"\r\n\r\nconst PdfJSViewer = ({ height, width, url }) => {\r\n    const path = 'lib/web/viewer.html'\r\n    let pdfPath = url ? path + '?file=' + url : path ;\r\n    return (\r\n        <div className =\"pdf\"   style={{ width, height }}>\r\n            {\r\n                <iframe\r\n                allowfullscreen\r\n                    title={pdfPath}\r\n                    width='100%'\r\n                    height='100%'\r\n                    src={pdfPath}\r\n                >\r\n                </iframe>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default PdfJSViewer","import React from 'react'\r\nimport PdfJSViewer from './components/PdfJSViewer'\r\nimport \"./Home.css\"\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <h1 >Pdf1</h1>\r\n            <PdfJSViewer height='100vh' width='100%'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","// import React, { useState } from 'react'\r\n// import \"./Pdf.css\"\r\n// import { createPortal } from 'react-dom'\r\n// // import { IFrame } from './iframe'\r\n\r\n\r\n\r\n//  const Pdf2 = ({ height, width, url2, children, ...props }) => {\r\n\r\n//     //let pdfPath2 = 'lib/web/a1afei.pdf'\r\n\r\n//    //const path = 'lib/web/a1afei.pdf'\r\n   \r\n//    const path = 'lib/web/vi.html'\r\n//     let pdfPath2 = url2 ? path + '?file1=' + url2 : path;\r\n\r\n//     const [contentRef, setContentRef] = useState(null)\r\n\r\n//     const mountNode = contentRef?.contentWindow?.document?.body\r\n      \r\n\r\n    \r\n//     return (\r\n\r\n      \r\n           \r\n                    \r\n//         <div className=\"back\">\r\n//         <div className=\"ok\" style={{ width, height }}>\r\n\r\n//             { \r\n//                 <iframe id=\"goku\"  \r\n//                 {...props} ref={setContentRef}\r\n                \r\n//                 // sandbox=\"allow-same-origin allow-scripts allow-forms\" \r\n//                 title={pdfPath2}\r\n\r\n//                     width='100%'\r\n//                     height='100%'\r\n//                     src={pdfPath2} \r\n//                     >\r\n//                           {mountNode && createPortal(children, mountNode)} \r\n//                 </iframe>\r\n//             }\r\n//         </div>\r\n//         </div>\r\n      \r\n\r\n        \r\n//         );\r\n//     }\r\n    \r\n//     <script>\r\n\r\n// </script>\r\n\r\n// export default Pdf2\r\n\r\n\r\nimport React from 'react'\r\nimport \"./Pdf.css\"\r\n// import { IFrame } from './iframe'\r\n\r\n\r\n\r\n const Pdf2 = ({ height, width, url2}) => {\r\n\r\n    //let pdfPath2 = 'lib/web/a1afei.pdf'\r\n\r\n   //const path = 'lib/web/a1afei.pdf'\r\n   \r\n   const path = 'lib/web/vi.html'\r\n    let pdfPath2 = url2 ? path + '?file1=' + url2 : path;\r\n   \r\n      \r\n   \r\n     function iframefunction (e) {\r\n    //     e.preventDefault();\r\n    // e.stopPropagation();\r\n    //      debugger\r\n    //   console.log(e)\r\n        var iframedata = document\r\n         .getElementById(\"goku\")\r\n\r\n         iframedata.addEventListener(\"click\", function (e) {\r\n            e.preventDefault()\r\n        })\r\n    \r\n    }\r\n\r\n    return (                \r\n    <div className=\"back\">\r\n        <div className=\"ok\" style={{ width, height }}>\r\n                 <iframe \r\n             //sandbox=\"allow-same-origin allow-scripts allow-forms\" \r\n            //     target=\"_blank\"\r\n              onClick ={(event)=> iframefunction(event)}\r\n                id=\"goku\"\r\n                title={pdfPath2}\r\n                    width='100%'\r\n                    height='100%'\r\n                    src={pdfPath2} \r\n                    >\r\n                    </iframe> \r\n        \r\n            {/* <button onClick={()=> iframefunction()}>\r\n\r\n<p>safdasfsafsafsafsafasf</p>\r\n\r\n            </button> */}\r\n        </div>\r\n        </div>\r\n      \r\n\r\n        \r\n        );\r\n    }\r\n    \r\n    <script>\r\n\r\n\r\n\r\n\r\n    </script>\r\n    \r\n\r\nexport default Pdf2\r\n","import React from 'react'\r\nimport Pdf2 from './components/Pdf2'\r\nimport \"./Services.css\"\r\n// import { IFrame } from \"./IFrame\";\r\n\r\n\r\n\r\nfunction Services() {\r\n    return (\r\n        <div className=\"second\">\r\n                          <h1 >Pdf2</h1>\r\n                          <Pdf2 height='100vh' width='100%' sandbox/>  \r\n\r\n\r\n            {/* <IFramPDf2e height='100vh' width='100%'/> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    return (\r\n      <nav className={sidebar ? \"sidebar active\" : \"sidebar\"}>\r\n        <button className=\"hamburger\" type=\"button\" onClick={showSidebar}>\r\n          <div></div>\r\n        </button>\r\n        <ul onClick={showSidebar}>\r\n          <li><Link to=\"/\">Pdf1</Link></li>\r\n          <li><Link to=\"/services\">Pdf2</Link></li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n  \r\n  export default Sidebar;\r\n","import React from 'react';\nimport './App.css';\nimport Home from \"./Home\";\nimport Services from \"./Services\";\nimport Sidebar from \"./Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div  className=\"app\">\n      <Router>\n        <Sidebar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/services\" component={Services} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\n\n\nconst startApp = () => {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n};\n\nif (!window.cordova) {\n  startApp();\n} else {\n  document.addEventListener(\"deviceready\", startApp, false);\n}\n\n"],"sourceRoot":""}